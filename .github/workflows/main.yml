name: Flutter PuzzleApp CI/CD
on: [push]
  # push:
    # branches: [ main ]
defaults:
  run:
    # ワークフローの作業ディレクトリをpuzzleに変更
    working-directory: ./puzzle

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.3'
          channel: 'stable'
      - name: Flutter Test
        shell: bash
        run: flutter test
        
  build-android:
    needs: test
    runs-on: ubuntu-latest
    # environment:
    #   name: PuzzleAppEnv
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.3'
          channel: 'stable'
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Make keystore and properties
        shell: bash
        run: |
          KEYSTORE_PATH=$RUNNER_TEMP/keystore.jks
          echo -n $KEYSTORE | base64 --decode > $KEYSTORE_PATH
  
          KEY_PROPERTIES_PATH=android/key.properties
          echo "storePassword=$STORE_PASSWORD" >> $KEY_PROPERTIES_PATH
          echo "keyPassword=$KEY_PASSWORD"     >> $KEY_PROPERTIES_PATH
          echo "keyAlias=puzzleapp"            >> $KEY_PROPERTIES_PATH
          echo "storeFile=$KEYSTORE_PATH"      >> $KEY_PROPERTIES_PATH
        env:
          KEYSTORE: ${{ secrets.KEYSTORE }}
          STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      - name: Build and generate apk archive for android
        run: flutter build apk
      - name: Upload archive production artifacts for android
        uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: puzzle/build/app/outputs/flutter-apk/app-release.apk
          retention-days: 7 # 7日の期限
          
  build-ios:
    needs: test
    runs-on: macos-latest
    # environment:
    #   name: PuzzleAppEnv
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.3'
          channel: 'stable'
      - name: Make keychain and import certificate
        # shell: bash
        run: |
          KEYCHAIN_PASSWORD=$(node -p "Math.random().toString(36)")
          KEYCHAIN_PATH=$RUNNER_TEMP/build.keychain
          CERTIFICATE_PATH=$RUNNER_TEMP/build.p12
        
          # keychain作成
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        
          # 証明書をkeychainにインポート
          echo -n "$CERTIFICATE_P12" | base64 --decode > $CERTIFICATE_PATH
          security import $CERTIFICATE_PATH -P "$CERTIFICATE_P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
        env:
          CERTIFICATE_P12: ${{ secrets.CERTIFICATE_P12 }}
          CERTIFICATE_P12_PASSWORD: ${{ secrets.CERTIFICATE_P12_PASSWORD }}
      - name: Make provisioning profile
        # shell: bash
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo -n "$PROVISION_PROFILE" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/build.mobileprovision
        env:
          PROVISION_PROFILE: ${{ secrets.PROVISION_PROFILE }}
      - name: Build and generate ipa archive for ios
        # shell: bash
        run: flutter build ipa --export-options-plist=ios/ExportOptions.plist
      - name: Upload archive production artifacts for ios
        uses: actions/upload-artifact@v3
        with:
          name: ios-ipa
          path: puzzle/build/ios/ipa/puzzle.ipa
          retention-days: 7 # 7日の期限
  
  deploy-android:
    needs: build-android
    runs-on: ubuntu-latest
    # environment:
    #   name: PuzzleAppEnv
    steps:
      - name: Download archive production artifacts for android
        uses: actions/download-artifact@v3  
        with:
          name: android-apk
      - name: Get firebase token
        # shell: bash
        run: |
          # Install firebase
          curl -sL https://firbase.tools | bash

          # Distribute app with firebase
          firebase appdistribution:distribute app-release.apk --app $APP_ID --groups $TESTER_GROUP
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          APP_ID: 1:13957873450:android:32f21b3497be1649326853
          TESTER_GROUP: puzzleapp-tester-group
          
  deploy-ios:
    needs: build-ios
    runs-on: macos-latest
    # environment:
    #   name: PuzzleAppEnv
    steps:
      - name: Download archive production artifacts for ios
        uses: actions/download-artifact@v3
        with:
          name: ios-ipa
      - name: Get firebase token
        # shell: bash
        run: |
          # Install Firebase
          curl -sL https://firebase.tools | bash

          # Distribute app with firebase
          firebase appdistribution:distribute puzzle.ipa --app $APP_ID --groups $TESTER_GROUP
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          APP_ID: 1:13957873450:ios:5cafb2feaf0a3b1e326853
          TESTER_GROUP: puzzleapp-tester-group
          
